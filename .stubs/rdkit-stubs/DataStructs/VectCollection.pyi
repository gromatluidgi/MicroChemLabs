from _typeshed import Incomplete
from rdkit import DataStructs as DataStructs

class VectCollection:
    def __init__(self) -> None: ...
    def GetOrVect(self): ...
    orVect: Incomplete
    def AddVect(self, idx, vect) -> None: ...
    def Reset(self) -> None: ...
    def NumChildren(self): ...
    def GetChildren(self): ...
    def __getitem__(self, idx): ...
    GetBit: Incomplete
    def __len__(self) -> int: ...
    GetNumBits: Incomplete
    def GetOnBits(self): ...
    def DetachVectsNotMatchingBit(self, bit) -> None: ...
    def DetachVectsMatchingBit(self, bit) -> None: ...
    def Uniquify(self, verbose: bool = ...) -> None: ...
